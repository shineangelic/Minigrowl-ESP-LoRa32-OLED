<VisualMicro>
  <Program Name="Minigrowl" Ext=".ino" Location="C:\Users\Ale\source\repos\Minigrowl">
    <Compile ReCompileIfSourceIsNewer="1" IsDebugStart="1" IsGdb="0" IsCompiled="0" CompilerErrors="0" ConfigurationName="Debug" UseConfigurationNameInBuildFolder="True" StopOnError="False" OptimiseLibs="True" OptimiseCore="True" BuildPath="C:\Users\Ale\AppData\Local\Temp\VMBuilds\Minigrowl\espressif_WIFI_LoRa_32\Debug" />
    <Platform Name="arduino16x" Package="espressif" Platform="esp32" Architecture="xtensa-esp32-elf">
      <Board Name="espressif_WIFI_LoRa_32" Description="WIFI_LoRa_32" CoreFolder="C:\Users\Ale\Documents\Arduino\hardware\espressif\esp32\cores\esp32" VariantFullPath="C:\Users\Ale\Documents\Arduino\hardware\espressif\esp32\variants\WIFI_LoRa_32" McuIdePath="E:\Program Files (x86)\arduino-1.8.0" McuSketchBookPath="C:\Users\Ale\Documents\Arduino" name="WIFI_LoRa_32" upload.tool="esptool" upload.maximum_size="1044464" upload.maximum_data_size="294912" upload.wait_for_upload_port="true" serial.disableDTR="true" serial.disableRTS="true" build.mcu="esp32" build.core="esp32" build.variant="WIFI_LoRa_32" build.board="WIFI_LoRa_32" build.f_cpu="240000000L" build.flash_mode="dio" build.flash_size="4MB" menu.FlashFreq.80="80MHz" menu.FlashFreq.80.build.flash_freq="80m" menu.FlashFreq.40="40MHz" menu.FlashFreq.40.build.flash_freq="40m" menu.UploadSpeed.921600="921600" menu.UploadSpeed.921600.upload.speed="921600" menu.UploadSpeed.115200="115200" menu.UploadSpeed.115200.upload.speed="115200" menu.UploadSpeed.256000.windows="256000" menu.UploadSpeed.256000.upload.speed="256000" menu.UploadSpeed.230400.windows.upload.speed="256000" menu.UploadSpeed.230400="230400" menu.UploadSpeed.230400.upload.speed="230400" menu.UploadSpeed.460800.linux="460800" menu.UploadSpeed.460800.macosx="460800" menu.UploadSpeed.460800.upload.speed="460800" menu.UploadSpeed.512000.windows="512000" menu.UploadSpeed.512000.upload.speed="512000" menu.UploadSpeed.256000="256000" menu.UploadSpeed.512000="512000" runtime.ide.path="E:\Program Files (x86)\arduino-1.8.0" runtime.os="windows" build.system.path="C:\Users\Ale\Documents\Arduino\hardware\espressif\esp32\system" runtime.ide.version="108010" target_package="espressif" target_platform="esp32" runtime.hardware.path="C:\Users\Ale\Documents\Arduino\hardware\espressif" originalid="WIFI_LoRa_32" intellisense.tools.path="{compiler.toolchain.path}" intellisense.include.paths="{runtime.tools.xtensa-esp32-elf-gcc.path}\lib\gcc\xtensa-esp32-elf\5.2.0\include;{runtime.tools.xtensa-esp32-elf-gcc.path}\xtensa-esp32-elf\include\c++\5.2.0\xtensa-esp32-elf;{runtime.tools.xtensa-esp32-elf-gcc.path}\xtensa-esp32-elf\include;{runtime.tools.xtensa-esp32-elf-gcc.path}\xtensa-esp32-elf\include\c++\5.2.0;{runtime.tools.xtensa-esp32-elf-gcc.path}\include\c++\5.2.0;{runtime.tools.xtensa-esp32-elf-gcc.path}\include;{runtime.tools.xtensa-esp32-elf-gcc.path}\include\include;" tools.wwwfiles.name="ESP32 Sketch Data Upload" tools.wwwfiles.ssh="false" tools.wwwfiles.cmd.windows="ESP32FSUpload.exe" recipe.wwwfiles.upload.pattern="&quot;{vm.path}/{tools.wwwfiles.cmd}&quot; -serial.port={serial.port} -build.path=&quot;{build.path}&quot; -target_platform=&quot;{target_platform}&quot; -runtime.tools.mkspiffs.path=&quot;{runtime.tools.mkspiffs.path}&quot; -board.name=&quot;{name}&quot; -upload.verbose={upload.verbose} -upload.resetmethod={upload.resetmethod} -upload.speed={upload.speed}  -platform.path=&quot;{platform.path}&quot; -project.name=&quot;{project.name}&quot; -project.path=&quot;{project.path}&quot; -tools.esptool.cmd=&quot;{tools.esptool.cmd}&quot; -tools.esptool.cmd.windows=&quot;{tools.esptool.cmd.windows}&quot; -runtime.tools.esptool.path=&quot;{runtime.tools.esptool.path}&quot; -compiler.path=&quot;{compiler.path}&quot; -build.spiffs_start=&quot;{build.spiffs_start}&quot; -build.spiffs_end=&quot;{build.spiffs_end}&quot; -build.spiffs_pagesize=&quot;{build.spiffs_pagesize}&quot; -build.spiffs_blocksize=&quot;{build.spiffs_blocksize}&quot; -build.partitions=&quot;{build.partitions}&quot; -network.password={network.password} -network.auth_upload={network.auth_upload} -network.port={network.port} -upload.tool={upload.tool} -tools.esptool_py.cmd=&quot;{tools.esptool_py.cmd}&quot; -tools.esptool_py.cmd.windows=&quot;{tools.esptool_py.cmd.windows}&quot; -runtime.tools.esptool_py.path=&quot;{runtime.tools.esptool_py.path}&quot; -build.flash_mode={build.flash_mode} -build.flash_freq={build.flash_freq}" exceptions.serial.enabled="true" exceptions.serial.messages="{vm.platform.root.path}/hardware/esp32/exceptions.txt" exceptions.serial.regex.exception_number="Exception \(([0-9]*)\):" exceptions.serial.regex.stack_addresses="40[0-2][0-9a-f]{5}\b" exceptions.serial.resolve.addr2line.args="-aipfC -e&quot;{build.path}/{build.project_name}.elf&quot;" exceptions.serial.resolve.addr2line.cmd="xtensa-esp32-elf-addr2line" exceptions.serial.resolve.stack_addresses.pattern="&quot;{compiler.path}{addr2line.cmd}&quot; {addr2line.args} {stack_addresses.list}" upload.8dot3="false" tools.openocd.debug.path="{runtime.tools.openocd-espressif-esp32-10.0.1.path}" tools.openocd.debug.cmd="bin/openocd.exe" tools.openocd.debug.cmd.windows="bin/openocd.exe" tools.openocd.debug.params.verbose="-d2" tools.openocd.debug.openocdscript="esp-wroom-32.cfg" tools.openocd.debug.args="{params.verbose} -l &quot;{{build.path}/{build.project_name}_DebugOpenOCD.log}&quot; -s &quot;{path}/share/openocd/scripts/&quot; -f &quot;{path}/share/openocd/scripts/interface/{build.openocddebugger}&quot; -c &quot;set ESP32_RTOS none&quot; -f &quot;{path}/share/openocd/scripts/board/{openocdscript}&quot; -c &quot;init&quot;" tools.openocd.debug.address="localhost:3333" tools.esp32devkit.server.build.openocddebugger="ftdi/esp32_devkitj_v1.cfg" tools.esp32devkit.args="-ex &quot;set remote hardware-watchpoint-limit 2&quot; -ex &quot;mon reset halt&quot; -ex &quot;flushregs&quot; -ex &quot;thb app_main&quot; -ex &quot;c&quot;" tools.esp32devkit.path="{runtime.tools.xtensa-esp32-elf-gcc.path}/bin" tools.esp32devkit.cmd="xtensa-esp32-elf-gdb.exe" tools.esp32devkit.pattern="&quot;{path}/{cmd}&quot; {args}" tools.esp32devkit.server.tool="openocd" tools.esp32prog.server.build.openocddebugger="ftdi/minimodule-lowcost.cfg" tools.esp32prog.args="-ex &quot;set remote hardware-watchpoint-limit 2&quot; -ex &quot;mon reset halt&quot; -ex &quot;flushregs&quot; -ex &quot;thb app_main&quot; -ex &quot;c&quot;" tools.esp32prog.path="{runtime.tools.xtensa-esp32-elf-gcc.path}/bin" tools.esp32prog.cmd="xtensa-esp32-elf-gdb.exe" tools.esp32prog.pattern="&quot;{path}/{cmd}&quot; {args}" tools.esp32prog.server.tool="openocd" tools.f2232h.server.build.openocddebugger="ftdi/minimodule-lowcost.cfg" tools.f2232h.args="-ex &quot;set remote hardware-watchpoint-limit 2&quot; -ex &quot;mon reset halt&quot; -ex &quot;flushregs&quot; -ex &quot;thb app_main&quot; -ex &quot;c&quot;" tools.f2232h.path="{runtime.tools.xtensa-esp32-elf-gcc.path}/bin" tools.f2232h.cmd="xtensa-esp32-elf-gdb.exe" tools.f2232h.pattern="&quot;{path}/{cmd}&quot; {args}" tools.f2232h.server.tool="openocd" tools.f2232mm.server.build.openocddebugger="ftdi/minimodule.cfg" tools.f2232mm.args="-ex &quot;set remote hardware-watchpoint-limit 2&quot; -ex &quot;mon reset halt&quot; -ex &quot;flushregs&quot; -ex &quot;thb app_main&quot; -ex &quot;c&quot;" tools.f2232mm.path="{runtime.tools.xtensa-esp32-elf-gcc.path}/bin" tools.f2232mm.cmd="xtensa-esp32-elf-gdb.exe" tools.f2232mm.pattern="&quot;{path}/{cmd}&quot; {args}" tools.f2232mm.server.tool="openocd" tools.olimexarmusbtiny.server.build.openocddebugger="ftdi/olimex-jtag-tiny.cfg" tools.olimexarmusbtiny.cmd="xtensa-esp32-elf-gdb.exe" tools.olimexarmusbtiny.path="{runtime.tools.xtensa-esp32-elf-gcc.path}/bin" tools.olimexarmusbtiny.pattern="&quot;{path}/{cmd}&quot;" tools.olimexarmusbtiny.server.tool="openocd" tools.olimexarmusbtiny.server.args="{params.verbose} -s &quot;{path}/share/openocd/scripts/&quot; -c &quot;adapter_khz 1000&quot; -f &quot;{path}/share/openocd/scripts/interface/{build.openocddebugger}&quot; -c &quot;set ESP32_RTOS none&quot; -f &quot;{path}/share/openocd/scripts/board/{openocdscript}&quot; -c &quot;init; reset halt&quot;" tools.olimexarmusbtinyh.server.build.openocddebugger="ftdi/olimex-jtag-tiny-h.cfg" tools.olimexarmusbtinyh.cmd="xtensa-esp32-elf-gdb.exe" tools.olimexarmusbtinyh.path="{runtime.tools.xtensa-esp32-elf-gcc.path}/bin" tools.olimexarmusbtinyh.pattern="&quot;{path}/{cmd}&quot;" tools.olimexarmusbtinyh.server.tool="openocd" tools.olimexarmusbtinyh.server.args="{params.verbose} -s &quot;{path}/share/openocd/scripts/&quot; -c &quot;adapter_khz 1000&quot; -f &quot;{path}/share/openocd/scripts/interface/{build.openocddebugger}&quot; -c &quot;set ESP32_RTOS none&quot; -f &quot;{path}/share/openocd/scripts/board/{openocdscript}&quot; -c &quot;init; reset halt&quot;" tools.jlink.server.build.openocddebugger="jlink.cfg" tools.jlink.cmd="xtensa-esp32-elf-gdb.exe" tools.jlink.args="-ex &quot;set remote hardware-watchpoint-limit 2&quot; -ex &quot;mon reset halt&quot; -ex &quot;flushregs&quot; -ex &quot;thb app_main&quot; -ex &quot;c&quot;" tools.jlink.path="{runtime.tools.xtensa-esp32-elf-gcc.path}/bin" tools.jlink.pattern="&quot;{path}/{cmd}&quot; {args}" tools.jlink.server.tool="openocd" debug_menu.hwdebugger.esp32devkit="ESP32 DEVKIT" debug_menu.hwdebugger.esp32devkit.debug.tool="esp32devkit" meta_esp32devkit.sentence="This debugger will require some the jumper configuration to be set correctly to allow debugging" meta_esp32devkit.comment="Jumper settings can be found at the below link, and the 'https://zadig.akeo.ie/' tool is required to replace the USB Driver on Interface 0 with 'WinUSB'. Set vMicro &gt; Debugger &gt; 'Compiler Optimization' to  &gt; 'No Optimization' to ensure correct debugging (NOTE: This might cause compilation errors with certain code such as HardwareSerial.)" meta_esp32devkit.image.connect="https://docs.espressif.com/projects/esp-idf/en/latest/hw-reference/get-started-wrover-kit.html#setup-options" meta_esp32devkit.image.operation="https://www.visualmicro.com/pics/Debug-Break-ESP32-FT2232H-VSOnly.png" meta_esp32devkit.reference.usage.url="https://www.visualmicro.com/page/User-Guide.aspx?doc=Arduino-gdb-Tutorial.html" debug_menu.hwdebugger.esp32prog="ESP32 PROG" debug_menu.hwdebugger.esp32prog.debug.tool="esp32prog" meta_esp32prog.sentence="This debugger will require some wiring to connect it to your target ESP32 board" meta_esp32prog.comment="Wiring can be found in the below image, and the 'https://zadig.akeo.ie/' tool is required to replace the USB Driver on Interface 0 with 'WinUSB'. Set vMicro &gt; Debugger &gt; 'Compiler Optimization' to  &gt; 'No Optimization' to ensure correct debugging (NOTE: This might cause compilation errors with certain code such as HardwareSerial.)" meta_esp32prog.image.connect="https://www.visualmicro.com/pics/Debug-Help-ESP32-JTAG-Connections.png" meta_esp32prog.image.operation="https://www.visualmicro.com/pics/Debug-Break-ESP32-FT2232H-VSOnly.png" meta_esp32prog.reference.usage.url="https://www.visualmicro.com/page/User-Guide.aspx?doc=Arduino-gdb-Tutorial.html" debug_menu.hwdebugger.f2232h="F2232H Dual RS232" debug_menu.hwdebugger.f2232h.debug.tool="f2232h" meta_f2232h.sentence="This debugger will require some wiring to connect it to your target ESP32 board" meta_f2232h.comment="Wiring can be found in the below image, and the 'https://zadig.akeo.ie/' tool is required to replace the USB Driver on Interface 0 with 'WinUSB'. Set vMicro &gt; Debugger &gt; 'Compiler Optimization' to  &gt; 'No Optimization' to ensure correct debugging (NOTE: This might cause compilation errors with certain code such as HardwareSerial.)" meta_f2232h.image.connect="https://www.visualmicro.com/pics/Debug-Help-ESP32-FT2232H-Connections.png" meta_f2232h.image.operation="https://www.visualmicro.com/pics/Debug-Break-ESP32-FT2232H-VSOnly.png" meta_f2232h.reference.usage.url="https://www.visualmicro.com/page/User-Guide.aspx?doc=Arduino-gdb-Tutorial.html" debug_menu.hwdebugger.f2232mm="F2232 MiniModule" debug_menu.hwdebugger.f2232mm.debug.tool="f2232mm" meta_f2232mm.sentence="This debugger will require some wiring to allow it to function, and connect to your target ESP32 board" meta_f2232mm.comment="Wiring can be found in the below image, and the 'https://zadig.akeo.ie/' tool is required to replace the USB Driver on Interface 0 with 'WinUSB'. Set vMicro &gt; Debugger &gt; 'Compiler Optimization' to  &gt; 'No Optimization' to ensure correct debugging (NOTE: This might cause compilation errors with certain code such as HardwareSerial.)" meta_f2232mm.image.operation="https://www.visualmicro.com/pics/Debug-Break-ESP32-FT2232MM-VSOnly.png" meta_f2232mm.image.connect="https://www.visualmicro.com/pics/Debug-Help-ESP32-FT2232MM-Connections.png" meta_f2232mm.reference.usage.url="https://www.visualmicro.com/page/User-Guide.aspx?doc=Arduino-gdb-Tutorial.html" debug_menu.hwdebugger.olimexarmusbtiny="Olimex ARM-USB-TINY" debug_menu.hwdebugger.olimexarmusbtiny.debug.tool="olimexarmusbtiny" meta_olimexarmusbtiny.sentence="This debugger will require some wiring to connect it to your target ESP32 board" meta_olimexarmusbtiny.comment="Wiring can be found in the below image, and the 'https://zadig.akeo.ie/' tool is required to replace the USB Driver on Interface 0 with 'WinUSB'. Set vMicro &gt; Debugger &gt; 'Compiler Optimization' to  &gt; 'No Optimization' to ensure correct debugging (NOTE: This might cause compilation errors with certain code such as HardwareSerial.)" meta_olimexarmusbtiny.image.connect="https://www.visualmicro.com/pics/Debug-Help-ESP32-JTAG-Connections.png" meta_olimexarmusbtiny.image.operation="https://www.visualmicro.com/pics/Debug-Break-ESP32-OlimexARMUSBTiny-VSOnly.png" meta_olimexarmusbtiny.reference.usage.url="https://www.visualmicro.com/page/User-Guide.aspx?doc=Arduino-gdb-Tutorial.html" debug_menu.hwdebugger.olimexarmusbtinyh="Olimex ARM-USB-TINY-H" debug_menu.hwdebugger.olimexarmusbtinyh.debug.tool="olimexarmusbtinyh" meta_olimexarmusbtinyh.sentence="This debugger will require some wiring to connect it to your target ESP32 board" meta_olimexarmusbtinyh.comment="Wiring can be found in the below image, and the 'https://zadig.akeo.ie/' tool is required to replace the USB Driver on Interface 0 with 'WinUSB'. Set vMicro &gt; Debugger &gt; 'Compiler Optimization' to  &gt; 'No Optimization' to ensure correct debugging (NOTE: This might cause compilation errors with certain code such as HardwareSerial.)" meta_olimexarmusbtinyh.image.connect="https://www.visualmicro.com/pics/Debug-Help-ESP32-JTAG-Connections.png" meta_olimexarmusbtinyh.image.operation="https://www.visualmicro.com/pics/Debug-Break-ESP32-OlimexARMUSBTiny-VSOnly.png" meta_olimexarmusbtinyh.reference.usage.url="https://www.visualmicro.com/page/User-Guide.aspx?doc=Arduino-gdb-Tutorial.html" debug_menu.hwdebugger.jlink="Segger J-Link" debug_menu.hwdebugger.jlink.debug.tool="jlink" meta_jlink.sentence="This debugger will require some wiring to connect it to your target ESP32 board" meta_jlink.comment="Wiring can be found in the below image, and the 'https://zadig.akeo.ie/' tool is required to replace the USB Driver on Interface 0 with 'WinUSB'. Set vMicro &gt; Debugger &gt; 'Compiler Optimization' to  &gt; 'No Optimization' to ensure correct debugging (NOTE: This might cause compilation errors with certain code such as HardwareSerial.)" meta_jlink.image.connect="https://www.visualmicro.com/pics/Debug-Help-ESP32-Jlink-Connections.png" meta_jlink.image.operation="https://www.visualmicro.com/pics/Debug-Break-ESP32-Jlink-VSOnly.png" meta_jlink.reference.usage.url="https://www.visualmicro.com/page/User-Guide.aspx?doc=Arduino-gdb-Tutorial.html" tools.openocd.upload.path="{runtime.tools.openocd-espressif-esp32-10.0.1.path}" tools.openocd.upload.cmd="bin/openocd.exe" tools.openocd.upload.cmd.windows="bin/openocd.exe" tools.openocd.upload.params.verbose="-d2" tools.openocd.upload.params.quiet="-d0" tools.openocd.upload.openocdscript="esp-wroom-32.cfg" tools.openocd.upload.binsector="0x10000" tools.openocd.upload.pattern="&quot;{upload.path}/{upload.cmd}&quot; {upload.verbose} -s &quot;{upload.path}/share/openocd/scripts/&quot; -f &quot;interface/{openocddebugger}&quot; -f &quot;board/{upload.openocdscript}&quot; -c &quot;echo -n {****[vMicro]**** Uploading App :}&quot; -c &quot;telnet_port disabled; program {build.path}/{build.project_name}.bin {upload.binsector} reset; shutdown&quot;" tools.openocd.program.path="{runtime.tools.openocd-espressif-esp32-10.0.1.path}" tools.openocd.program.cmd="bin/openocd.exe" tools.openocd.program.cmd.windows="bin/openocd.exe" tools.openocd.program.params.verbose="-d2" tools.openocd.program.params.quiet="-d0" tools.openocd.program.openocdscript="esp-wroom-32.cfg" tools.openocd.program.pattern="&quot;{program.path}/{program.cmd}&quot; {program.verbose} -s &quot;{program.path}/share/openocd/scripts/&quot; -f &quot;interface/{openocddebugger}&quot; -f &quot;board/{upload.openocdscript}&quot; -c &quot;echo -n {****[vMicro]**** Uploading App :}&quot; -c &quot;telnet_port disabled; program {{runtime.platform.path}/tools/partitions/boot_app0.bin} 0xe000&quot; -c &quot;echo -n {****[vMicro]**** Uploading Bootloader :}&quot; -c &quot;program {{runtime.platform.path}/tools/sdk/bin/bootloader_{build.boot}_{build.flash_freq}.bin} 0x1000&quot;  -c &quot;echo -n {****[vMicro]**** Uploading Sketch :}&quot; -c &quot;program {{build.path}/{build.project_name}.bin} 0x10000&quot;  -c &quot;echo -n {****[vMicro]**** Uploading Partitions :}&quot; -c &quot;program {{build.path}/{build.project_name}.partitions.bin} 0x8000 reset; shutdown&quot;" tools.wwwfiles.cmd="ESP32FSUpload.exe" version="0.0.2" runtime.tools.xtensa-esp32-elf-gcc.path="{runtime.platform.path}/tools/xtensa-esp32-elf" tools.esptool.cmd="&quot;{runtime.platform.path}/tools/esptool.exe&quot;" tools.esptool.cmd.windows="&quot;{runtime.platform.path}/tools/esptool.exe&quot;" tools.gen_esp32part.cmd="&quot;{runtime.platform.path}/tools/gen_esp32part.exe&quot;" tools.gen_esp32part.cmd.windows="&quot;{runtime.platform.path}/tools/gen_esp32part.exe&quot;" compiler.warning_flags="-w" compiler.warning_flags.none="-w" compiler.warning_flags.default="" compiler.warning_flags.more="-Wall -Werror=all" compiler.warning_flags.all="-Wall -Werror=all -Wextra" compiler.path="{runtime.tools.xtensa-esp32-elf-gcc.path}/bin/" compiler.sdk.path="{runtime.platform.path}/tools/sdk" compiler.cpreprocessor.flags="-DESP_PLATFORM -DMBEDTLS_CONFIG_FILE=&quot;mbedtls/esp_config.h&quot; -DHAVE_CONFIG_H &quot;-I{compiler.sdk.path}/include/config&quot; &quot;-I{compiler.sdk.path}/include/bluedroid&quot; &quot;-I{compiler.sdk.path}/include/bt&quot; &quot;-I{compiler.sdk.path}/include/driver&quot; &quot;-I{compiler.sdk.path}/include/esp32&quot; &quot;-I{compiler.sdk.path}/include/ethernet&quot; &quot;-I{compiler.sdk.path}/include/fatfs&quot; &quot;-I{compiler.sdk.path}/include/freertos&quot; &quot;-I{compiler.sdk.path}/include/log&quot; &quot;-I{compiler.sdk.path}/include/mdns&quot; &quot;-I{compiler.sdk.path}/include/mbedtls&quot; &quot;-I{compiler.sdk.path}/include/mbedtls_port&quot; &quot;-I{compiler.sdk.path}/include/vfs&quot; &quot;-I{compiler.sdk.path}/include/ulp&quot; &quot;-I{compiler.sdk.path}/include/newlib&quot; &quot;-I{compiler.sdk.path}/include/nvs_flash&quot; &quot;-I{compiler.sdk.path}/include/spi_flash&quot; &quot;-I{compiler.sdk.path}/include/sdmmc&quot; &quot;-I{compiler.sdk.path}/include/openssl&quot; &quot;-I{compiler.sdk.path}/include/app_update&quot; &quot;-I{compiler.sdk.path}/include/tcpip_adapter&quot; &quot;-I{compiler.sdk.path}/include/xtensa-debug-module&quot; &quot;-I{compiler.sdk.path}/include/newlib&quot; &quot;-I{compiler.sdk.path}/include/coap&quot; &quot;-I{compiler.sdk.path}/include/wpa_supplicant&quot; &quot;-I{compiler.sdk.path}/include/expat&quot; &quot;-I{compiler.sdk.path}/include/json&quot; &quot;-I{compiler.sdk.path}/include/nghttp&quot; &quot;-I{compiler.sdk.path}/include/lwip&quot;" compiler.c.cmd="xtensa-esp32-elf-gcc" compiler.c.flags="-std=gnu99 -Os -g3 -ffunction-sections -fdata-sections -fstrict-volatile-bitfields -mlongcalls -nostdlib -Wpointer-arith {compiler.warning_flags} -Wno-error=unused-function -Wno-error=unused-but-set-variable -Wno-error=unused-variable -Wno-error=deprecated-declarations -Wno-unused-parameter -Wno-sign-compare -Wno-old-style-declaration -MMD -c" compiler.cpp.cmd="xtensa-esp32-elf-g++" compiler.cpp.flags="-std=gnu++11 -fno-exceptions -fno-rtti -Os -g3 -Wpointer-arith -ffunction-sections -fdata-sections -fstrict-volatile-bitfields -mlongcalls -nostdlib {compiler.warning_flags} -Wno-error=unused-function -Wno-error=unused-but-set-variable -Wno-error=unused-variable -Wno-error=deprecated-declarations -Wno-unused-parameter -Wno-sign-compare -fno-rtti -MMD -c" compiler.S.cmd="xtensa-esp32-elf-gcc" compiler.S.flags="-c -g3 -x assembler-with-cpp -MMD -mlongcalls" compiler.c.elf.cmd="xtensa-esp32-elf-gcc" compiler.c.elf.flags="-nostdlib &quot;-L{compiler.sdk.path}/lib&quot; &quot;-L{compiler.sdk.path}/ld&quot; -T esp32_out.ld -T esp32.common.ld -T esp32.rom.ld -T esp32.peripherals.ld -u call_user_start_cpu0 -Wl,--gc-sections -Wl,-static -Wl,--undefined=uxTopUsedPriority" compiler.c.elf.libs="-lgcc -lstdc++ -lapp_update -lbootloader_support -lbt -lbtdm_app -lc -lc_nano -lcoap -lcoexist -lcore -lcxx -ldriver -lesp32 -lethernet -lexpat -lfatfs -lfreertos -lhal -ljson -llog -llwip -lm -lmbedtls -lmdns -lmicro-ecc -lnet80211 -lnewlib -lnghttp -lnvs_flash -lopenssl -lphy -lpp -lrtc -lsdmmc -lsmartconfig -lspi_flash -ltcpip_adapter -lulp -lvfs -lwpa -lwpa2 -lwpa_supplicant -lwps -lxtensa-debug-module" compiler.as.cmd="xtensa-esp32-elf-as" compiler.ar.cmd="xtensa-esp32-elf-ar" compiler.ar.flags="cru" compiler.size.cmd="xtensa-esp32-elf-size" build.code_debug="0" build.extra_flags="-DESP32 -DCORE_DEBUG_LEVEL={build.code_debug}" compiler.c.extra_flags="" compiler.c.elf.extra_flags="" compiler.S.extra_flags="" compiler.cpp.extra_flags="" compiler.ar.extra_flags="" compiler.objcopy.eep.extra_flags="" compiler.elf2hex.extra_flags="" recipe.c.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.cpreprocessor.flags} {compiler.c.flags} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.c.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.cpp.o.pattern="&quot;{compiler.path}{compiler.cpp.cmd}&quot; {compiler.cpreprocessor.flags} {compiler.cpp.flags} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.cpp.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.S.o.pattern="&quot;{compiler.path}{compiler.c.cmd}&quot; {compiler.cpreprocessor.flags} {compiler.S.flags} -DF_CPU={build.f_cpu} -DARDUINO={runtime.ide.version} -DARDUINO_{build.board} -DARDUINO_ARCH_{build.arch} {compiler.c.extra_flags} {build.extra_flags} {includes} &quot;{source_file}&quot; -o &quot;{object_file}&quot;" recipe.ar.pattern="&quot;{compiler.path}{compiler.ar.cmd}&quot; {compiler.ar.flags} {compiler.ar.extra_flags} &quot;{archive_file_path}&quot; &quot;{object_file}&quot;" recipe.c.combine.pattern="&quot;{compiler.path}{compiler.c.elf.cmd}&quot; {compiler.c.elf.flags} {compiler.c.elf.extra_flags} -Wl,--start-group {object_files} &quot;{build.path}/{archive_file}&quot; {compiler.c.elf.libs} -Wl,--end-group -Wl,-EL -o &quot;{build.path}/{build.project_name}.elf&quot;" recipe.objcopy.eep.pattern="{tools.gen_esp32part.cmd} -q &quot;{runtime.platform.path}/tools/partitions/default.csv&quot; &quot;{build.path}/{build.project_name}.partitions.bin&quot;" recipe.objcopy.hex.pattern="{tools.esptool.cmd} --chip esp32 elf2image --flash_mode &quot;{build.flash_mode}&quot; --flash_freq &quot;{build.flash_freq}&quot; --flash_size &quot;{build.flash_size}&quot; -o &quot;{build.path}/{build.project_name}.bin&quot; &quot;{build.path}/{build.project_name}.elf&quot;" recipe.output.tmp_file="{build.project_name}.bin" recipe.output.save_file="{build.project_name}.{build.variant}.bin" recipe.size.pattern="&quot;{compiler.path}{compiler.size.cmd}&quot; -A &quot;{build.path}/{build.project_name}.elf&quot;" recipe.size.regex="^(?:\.iram0\.text|\.dram0\.text|\.flash\.text|\.dram0\.data|\.flash\.rodata|)\s+([0-9]+).*" recipe.size.regex.data="^(?:\.dram0\.data|\.dram0\.bss)\s+([0-9]+).*" tools.esptool.upload.protocol="esp32" tools.esptool.upload.params.verbose="" tools.esptool.upload.params.quiet="" tools.esptool.upload.pattern="{cmd} --chip esp32 --port &quot;{serial.port}&quot; --baud {upload.speed}  --before default_reset --after hard_reset write_flash -z --flash_freq {build.flash_freq} --flash_mode {build.flash_mode} --flash_size {build.flash_size} 0x1000 &quot;{runtime.platform.path}/tools/sdk/bin/bootloader.bin&quot; 0x8000 &quot;{build.path}/{build.project_name}.partitions.bin&quot; 0xe000 &quot;{runtime.platform.path}/tools/partitions/boot_app0.bin&quot; 0x10000 &quot;{build.path}/{build.project_name}.bin&quot;" vm.platform.root.path="s:\visualstudio2019\common7\ide\extensions\cpwzuv43.p51\Micro Platforms\arduino16x" runtime.tools.arduinoOTA.path="E:\Program Files (x86)\arduino-1.8.0\hardware\tools\avr" runtime.tools.arduinoOTA-1.3.0.path="E:\Program Files (x86)\arduino-1.8.0\hardware\tools\avr" runtime.tools.avrdude.path="E:\Program Files (x86)\arduino-1.8.0\hardware\tools\avr" runtime.tools.avrdude-6.3.0-arduino17.path="E:\Program Files (x86)\arduino-1.8.0\hardware\tools\avr" runtime.tools.avr-gcc.path="E:\Program Files (x86)\arduino-1.8.0\hardware\tools\avr" runtime.tools.avr-gcc-7.3.0-atmel3.6.1-arduino5.path="E:\Program Files (x86)\arduino-1.8.0\hardware\tools\avr" runtime.tools.esptool.path="C:\Users\Ale\AppData\Local\arduino15\packages\esp8266\tools\esptool\0.4.13" runtime.tools.esptool-0.4.13.path="C:\Users\Ale\AppData\Local\arduino15\packages\esp8266\tools\esptool\0.4.13" runtime.tools.esptool-0.4.8.path="C:\Users\Ale\AppData\Local\arduino15\packages\esp8266\tools\esptool\0.4.8" runtime.tools.mkspiffs.path="C:\Users\Ale\AppData\Local\arduino15\packages\esp8266\tools\mkspiffs\0.2.0" runtime.tools.mkspiffs-0.1.2.path="C:\Users\Ale\AppData\Local\arduino15\packages\esp8266\tools\mkspiffs\0.1.2" runtime.tools.mkspiffs-0.2.0.path="C:\Users\Ale\AppData\Local\arduino15\packages\esp8266\tools\mkspiffs\0.2.0" runtime.tools.tools-avr.path="E:\Program Files (x86)\arduino-1.8.0\hardware\tools\avr" runtime.tools.xtensa-lx106-elf-gcc.path="C:\Users\Ale\AppData\Local\arduino15\packages\esp8266\tools\xtensa-lx106-elf-gcc\1.20.0-26-gb404fb9-2" runtime.tools.xtensa-lx106-elf-gcc-1.20.0-26-gb404fb9-2.path="C:\Users\Ale\AppData\Local\arduino15\packages\esp8266\tools\xtensa-lx106-elf-gcc\1.20.0-26-gb404fb9-2" runtime.vm.boardinfo.id="espressif_WIFI_LoRa_32" runtime.vm.boardinfo.name="espressif_WIFI_LoRa_32" runtime.vm.boardinfo.desc="WIFI_LoRa_32" runtime.vm.boardinfo.src_location="C:\Users\Ale\Documents\Arduino\hardware\espressif\esp32" ide.hint="Use installed IDE. Provides built-in hardware, reference/help and libraries." ide.location.key="Arduino16x" ide.location.ide.winreg="Arduino 1.6.x Application" ide.location.sketchbook.winreg="Arduino 1.6.x Sketchbook" ide.location.sketchbook.preferences="sketchbook.path" ide.default.revision_name="1.9.0" ide.default.version="10800" ide.default.package="arduino" ide.default.platform="avr" ide.multiplatform="true" ide.includes="Arduino.h" ide.exe_name="arduino" ide.recipe.preproc.defines.flags="-w -x c++ -E -dM" ide.platformswithoutpackage="false" ide.includes.fallback="wprogram.h" ide.extension="ino" ide.extension.fallback="pde" ide.versionGTEQ="160" ide.exe="arduino.exe" ide.builder.exe="arduinobuilder.exe" ide.builder.name="Arduino Builder" ide.hosts="atmel" ide.url="http://arduino.cc/en/Main/Software" ide.help.reference.path="reference" ide.help.reference.path2="reference\www.arduino.cc\en\Reference" ide.help.reference.serial="reference\www.arduino.cc\en\Serial" ide.location.preferences.portable="{runtime.ide.path}\portable" ide.location.preferences.arduinoData="{runtime.sketchbook.path}\ArduinoData" ide.location.preferences="%VM_APPDATA_LOCAL%\arduino15\preferences.txt" ide.location.preferences_fallback="%VM_APPDATA_ROAMING%\arduino15\preferences.txt" ide.location.contributions="%VM_APPDATA_LOCAL%\arduino15" ide.location.contributions_fallback="%VM_APPDATA_ROAMING%\arduino15" ide.contributions.boards.allow="true" ide.contributions.boards.ignore_unless_rewrite_found="true" ide.contributions.libraries.allow="true" ide.contributions.boards.support.urls.wiki="https://github.com/arduino/Arduino/wiki/Unofficial-list-of-3rd-party-boards-support-urls" ide.create_platforms_from_boardsTXT.teensy="build.core" vm.debug="true" software="ARDUINO" ssh.user.name="root" ssh.user.default.password="arduino" ssh.host.wwwfiles.path="/www/sd" build.working_directory="{runtime.ide.path}\java\bin" ide.debug_menu.debugger_type="Debug" ide.debug_menu.debugger_type.none="Off" ide.debug_menu.none.debug.tool="no_debug" ide.debug_menu.debugger_type.universal="Serial" ide.debug_menu.universal.debug.tool="auto" ide.debug_menu.debugger_type.hwdebugger="Hardware" ide.debug_menu.hwdebugger="Debugger" ide.debug_menu.hwdebugger.custom_debugger="Manual/Custom" ide.debug_menu.hwdebugger.custom_debugger.debug.tool="dbg_external" ide.meta_custom_debugger.sentence="Provides a build that includes debug defines and will launch a custom debugger if one is provided." ide.meta_custom_debugger.paragraph="This is option is for advanced use. It is recommended that a pre-configured debugger be selected when available in this list. Usage: Optionally add a customer debugger to the project. A 'debugger_launch.json' file shares the same command syntax that is used by the VsCode debugger. Custom debuggers can be targeted at a board and/or variant and/or configuration name. IE: [variant].[configuration_name][.]debugger_launch.json" ide.meta_custom_debugger.reference.usage.url="https://github.com/Microsoft/vscode-cpptools/blob/master/launch.md#customlaunchsetupcommands" ide.meta_custom_debugger.reference.connect.url="https://docs.microsoft.com/en-us/visualstudio/debugger/create-custom-views-of-native-objects?view=vs-2019" ide.compiler_flags_no_opt="-O0" ide.debug_menu.vm_disable_optimization="Disable Optimization" ide.debug_menu.vm_disable_optimization.vm_disable_opt_default="Default Optimization" ide.debug_menu.vm_disable_optimization.vm_disable_opt_proj="No Project  Optimization" ide.debug_menu.vm_disable_opt_proj.vm_disable_opt_project="{ide.compiler_flags_no_opt}" ide.debug_menu.vm_disable_optimization.vm_disable_opt_proj_libs="No Project + Libraries Optimization" ide.debug_menu.vm_disable_opt_proj_libs.vm_disable_opt_project="{ide.compiler_flags_no_opt}" ide.debug_menu.vm_disable_opt_proj_libs.vm_disable_opt_libraries="{ide.compiler_flags_no_opt}" ide.debug_menu.vm_disable_optimization.vm_disable_opt_all="No Optimization" ide.meta_vm_disable_opt_all.sentence="Disable compiler optimization for all sources:- Project, Library and Platform." ide.meta_vm_disable_opt_all.comment="After switching between 'No Optimization' and other optimization values, please click &quot;Solution Clean&quot; or switch off (or cycle) 'vMicro&gt;Compiler&gt;Shared Cache For Cores'. NOTE: Changing optimization settings can cause build errors or result in overly large programs." ide.debug_menu.vm_disable_opt_all.vm_disable_opt_project="{ide.compiler_flags_no_opt}" ide.debug_menu.vm_disable_opt_all.vm_disable_opt_libraries="{ide.compiler_flags_no_opt}" ide.debug_menu.vm_disable_opt_all.vm_disable_opt_core="{ide.compiler_flags_no_opt}" ide.appid="arduino16x" location.sketchbook="C:\Users\Ale\Documents\Arduino" build.core.vmresolved="C:\Users\Ale\Documents\Arduino\hardware\espressif\esp32\cores\esp32" build.core.parentfolder.vmresolved="C:\Users\Ale\Documents\Arduino\hardware\espressif\esp32\cores" build.core.coresparentfolder.vmresolved="C:\Users\Ale\Documents\Arduino\hardware\espressif\esp32" build.core.path="C:\Users\Ale\Documents\Arduino\hardware\espressif\esp32\cores\esp32" vm.core.include="arduino.h" vm.boardsource.path="C:\Users\Ale\Documents\Arduino\hardware\espressif\esp32" runtime.platform.path="C:\Users\Ale\Documents\Arduino\hardware\espressif\esp32" vm.platformname.name="esp32" build.arch="ESP32" vm.runtime.compiler.cached_cores_path="C:\Users\Ale\AppData\Local\Temp\VMBCore\arduino16x" vm.runtime.compiler.showwarnings="false" vm.runtime.compiler.showwarnings_core="false" vm.runtime.compiler.showwarnings_library="false" vm.runtime.upload.verbose="false" vm.runtime.upload.verify="false" runtime.vm.ide.platforms.path="s:\visualstudio2019\common7\ide\extensions\cpwzuv43.p51\Micro Platforms" runtime.vm.ide.tools.openocd.path="{runtime.tools.openocd-0.9.0.path}" runtime.vm.openocd.path="{runtime.tools.openocd-0.9.0.path}" vm.runtime.build.intermediate_output_path="C:\Users\Ale\source\repos\Minigrowl\Debug\" vm.runtime.build.final_output_path="C:\Users\Ale\source\repos\Minigrowl\Debug\" compiler.always_include_sketchfolder="true" compiler.always_include_sharedprojectfolders="true" vm.runtime.compiler.auto_discover_includes="true" vm.runtime.compiler.allow_library_debugging="false" serial.port.file="COM4" serial.port="COM4" serial.port.num="4" extra.time.local="1585444877" extra.time.utc="1585441277" extra.time.dst="3600" extra.time.zone="-3600" serial.port.caption="COM4   - Silicon Labs CP210x USB to UART Bridge" serial.Caption="Silicon Labs CP210x USB to UART Bridge (COM4)" serial.ClassGuid="{4d36e978-e325-11ce-bfc1-08002be10318}" serial.CompatibleID.value0="USB\Class_FF" serial.ConfigManagerErrorCode="0" serial.ConfigManagerUserConfig="False" serial.CreationClassName="Win32_PnPEntity" serial.Description="Silicon Labs CP210x USB to UART Bridge" serial.DeviceID="USB\VID_10C4&amp;PID_EA60\0001" serial.HardwareID.value0="USB\VID_10C4&amp;PID_EA60" serial.Manufacturer="Silicon Labs" serial.Name="Silicon Labs CP210x USB to UART Bridge (COM4)" serial.PNPClass="Ports" serial.PNPDeviceID="USB\VID_10C4&amp;PID_EA60\0001" serial.Present="True" serial.Service="silabser" serial.Status="OK" serial.SystemCreationClassName="Win32_ComputerSystem" serial.SystemName="CRONER" serial.vid="0x10C4" serial.pid="0xEA60" serial.vidpid="10C4EA60" serial.vid_pid="0x10C4_0xEA60" serial.iserial="0001" serial.port.iserial="0001" build.project_name="Minigrowl.ino" build.project_path="C:\Users\Ale\source\repos\Minigrowl" sketch_path="C:\Users\Ale\source\repos\Minigrowl" ProjectDir="C:\Users\Ale\source\repos\Minigrowl\" build.path="C:\Users\Ale\AppData\Local\Temp\VMBuilds\Minigrowl\espressif_WIFI_LoRa_32\Debug" debug.tool="auto" upload.speed="115200" build.flash_freq="80m" vm.runtime.compile.skip_library_file_if_exists_in_project="false" vm.runtime.compiler.auto_discover_includes_cache="true" build.vm.build.vmdebug="1" build.vm.build.isgdb="0" build.vm.build.optimised="1" vm.last.buildpath="C:\Users\Ale\AppData\Local\Temp\VMBuilds\Minigrowl\espressif_WIFI_LoRa_32\Debug" build.architecture="xtensa-esp32-elf" vmresolved.compiler.path="C:\Users\Ale\Documents\Arduino\hardware\espressif\esp32\tools\xtensa-esp32-elf\bin\" vmresolved.tools.path="C:\Users\Ale\Documents\Arduino\hardware\espressif\esp32\tools\xtensa-esp32-elf" build.variant.vmresolved.name="WIFI_LoRa_32" build.variant.vmresolved.full_path="C:\Users\Ale\Documents\Arduino\hardware\espressif\esp32\variants\WIFI_LoRa_32" />
    </Platform>
    <Debug DebugEnabled="1" EnableBreak="1" />
  </Program>
</VisualMicro>